digraph "output/dotfiles/calculator.dot" {
    label="calculator";
    "f0 := @parameter0: float" [label="f0 := @parameter0: float",];
    "f1 := @parameter1: float" [label="f1 := @parameter1: float",];
    "r0 := @parameter2: java.lang.String" [label="r0 := @parameter2: java.lang.String",];
    "f2 = 0.0F" [label="f2 = 0.0F",];
    "b1 = -1" [label="b1 = -1",];
    "$i0 = virtualinvoke r0.<java.lang.String: int hashCode()>()" [label="$i0 = virtualinvoke r0.<java.lang.String: int hash",];
    "tableswitch($i0) {     case 42: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\");     case 43: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\");     case 44: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 45: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\");     case 46: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 47: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\");     default: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }; }" [label="tableswitch($i0) {     case 42: goto $z3 = virtual",];
    "$z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\")" [label="$z2 = virtualinvoke r0.<java.lang.String: boolean ",];
    "if $z2 == 0 goto (branch)" [label="if $z2 == 0 goto (branch)",];
    "b1 = 0" [label="b1 = 0",];
    "goto [?= (branch)]" [label="goto [?= (branch)]",];
    "$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\")" [label="$z1 = virtualinvoke r0.<java.lang.String: boolean ",];
    "if $z1 == 0 goto (branch)" [label="if $z1 == 0 goto (branch)",];
    "b1 = 1" [label="b1 = 1",];
    "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\")" [label="$z0 = virtualinvoke r0.<java.lang.String: boolean ",];
    "if $z0 == 0 goto (branch)" [label="if $z0 == 0 goto (branch)",];
    "b1 = 2" [label="b1 = 2",];
    "$z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")" [label="$z3 = virtualinvoke r0.<java.lang.String: boolean ",];
    "if $z3 == 0 goto (branch)" [label="if $z3 == 0 goto (branch)",];
    "b1 = 3" [label="b1 = 3",];
    "tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }" [label="tableswitch(b1) {     case 0: goto f2 = f0 + f1;  ",];
    "f2 = f0 + f1" [label="f2 = f0 + f1",];
    "goto [?= return f2]" [label="goto [?= return f2]",];
    "f2 = f0 - f1" [label="f2 = f0 - f1",];
    "f2 = f0 / f1" [label="f2 = f0 / f1",];
    "f2 = f0 * f1" [label="f2 = f0 * f1",];
    "return f2" [label="return f2",];
    "f0 := @parameter0: float"->"f1 := @parameter1: float";
    "f1 := @parameter1: float"->"r0 := @parameter2: java.lang.String";
    "r0 := @parameter2: java.lang.String"->"f2 = 0.0F";
    "f2 = 0.0F"->"b1 = -1";
    "b1 = -1"->"$i0 = virtualinvoke r0.<java.lang.String: int hashCode()>()";
    "$i0 = virtualinvoke r0.<java.lang.String: int hashCode()>()"->"tableswitch($i0) {     case 42: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\");     case 43: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\");     case 44: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 45: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\");     case 46: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 47: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\");     default: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }; }";
    "tableswitch($i0) {     case 42: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\");     case 43: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\");     case 44: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 45: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\");     case 46: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 47: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\");     default: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }; }"->"$z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")";
    "tableswitch($i0) {     case 42: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\");     case 43: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\");     case 44: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 45: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\");     case 46: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 47: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\");     default: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }; }"->"$z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\")";
    "tableswitch($i0) {     case 42: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\");     case 43: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\");     case 44: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 45: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\");     case 46: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 47: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\");     default: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }; }"->"tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }";
    "tableswitch($i0) {     case 42: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\");     case 43: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\");     case 44: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 45: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\");     case 46: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 47: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\");     default: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }; }"->"$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\")";
    "tableswitch($i0) {     case 42: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\");     case 43: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\");     case 44: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 45: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\");     case 46: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; };     case 47: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\");     default: goto tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }; }"->"$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\")";
    "$z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"+\")"->"if $z2 == 0 goto (branch)";
    "if $z2 == 0 goto (branch)"->"b1 = 0";
    "if $z2 == 0 goto (branch)"->"tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }";
    "b1 = 0"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }";
    "$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"-\")"->"if $z1 == 0 goto (branch)";
    "if $z1 == 0 goto (branch)"->"b1 = 1";
    "if $z1 == 0 goto (branch)"->"tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }";
    "b1 = 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }";
    "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"/\")"->"if $z0 == 0 goto (branch)";
    "if $z0 == 0 goto (branch)"->"b1 = 2";
    "if $z0 == 0 goto (branch)"->"tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }";
    "b1 = 2"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }";
    "$z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")"->"if $z3 == 0 goto (branch)";
    "if $z3 == 0 goto (branch)"->"b1 = 3";
    "if $z3 == 0 goto (branch)"->"tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }";
    "b1 = 3"->"tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }";
    "tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }"->"f2 = f0 + f1";
    "tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }"->"f2 = f0 - f1";
    "tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }"->"f2 = f0 / f1";
    "tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }"->"f2 = f0 * f1";
    "tableswitch(b1) {     case 0: goto f2 = f0 + f1;     case 1: goto f2 = f0 - f1;     case 2: goto f2 = f0 / f1;     case 3: goto f2 = f0 * f1;     default: goto return f2; }"->"return f2";
    "f2 = f0 + f1"->"goto [?= return f2]";
    "goto [?= return f2]"->"return f2";
    "f2 = f0 - f1"->"goto [?= return f2]";
    "goto [?= return f2]"->"return f2";
    "f2 = f0 / f1"->"goto [?= return f2]";
    "goto [?= return f2]"->"return f2";
    "f2 = f0 * f1"->"return f2";
}
